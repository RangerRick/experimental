diff -Nurd kdepimlibs-4.3.0/CMakeLists.txt kdepimlibs-4.3.0-new/CMakeLists.txt
--- kdepimlibs-4.3.0/CMakeLists.txt	2009-07-29 07:09:57.000000000 -0400
+++ kdepimlibs-4.3.0-new/CMakeLists.txt	2009-07-29 22:39:46.000000000 -0400
@@ -33,8 +33,6 @@
 find_package(Boost)
 macro_log_feature(Boost_FOUND "boost" "Boost C++ Libraries" "http://www.boost.org" TRUE "" "Required by several critical KDEPIM apps.")
 
-#FindGpgme.cmake already handles the log message but we must ensure it is required.
-find_package(Gpgme REQUIRED)
 # configure macros
 if (GPGME_FOUND)
   include (gpgme++/ConfigureChecks.cmake)
@@ -59,8 +57,6 @@
 ############### Now, we add the KDEPIMLibs components ###############
 # These targets will always be built
 add_subdirectory(cmake)
-add_subdirectory(gpgme++)
-add_subdirectory(qgpgme)
 
 if (NOT KDEPIM_ONLY_KLEO)
   add_subdirectory(akonadi)
diff -Nurd kdepimlibs-4.3.90/kioslave/imap4/imapparser.cpp kdepimlibs-4.3.90-new/kioslave/imap4/imapparser.cpp
--- kdepimlibs-4.3.90/kioslave/imap4/imapparser.cpp	2009-08-12 05:59:15.000000000 -0400
+++ kdepimlibs-4.3.90-new/kioslave/imap4/imapparser.cpp	2010-01-13 12:05:07.000000000 -0500
@@ -262,13 +262,12 @@
   }
   cmd = sendCommand (CommandPtr(new imapCommand ("AUTHENTICATE", firstCommand.toLatin1())));
 
-  while ( true )
-  {
+  int pl = 0;
+  while ( pl != -1 && !cmd->isComplete () ) {
     //read the next line
-    while (parseLoop() == 0) {
+    while ( ( pl = parseLoop() ) == 0) {
       ;
     }
-    if ( cmd->isComplete() ) break;
 
     if (!continuation.isEmpty())
     {
