diff -Nurd qtscriptgenerator-src-0.1.0/Makefile qtscriptgenerator-src-0.1.0-patched/Makefile
--- qtscriptgenerator-src-0.1.0/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/Makefile	2010-01-20 08:58:56.000000000 -0500
@@ -0,0 +1,46 @@
+BUILDDIR := .
+GENERATOR := $(BUILDDIR)/generator/generator
+CXXFLAGS ?=
+MODULES := core gui network opengl phonon sql svg uitools webkit xml xmlpatterns
+PLUGINS_LIBS = $(patsubst %,$(BUILDDIR)/plugins/script/libqtscript_%.so,$(MODULES))
+GENERATED_CPP_MAIN = $(patsubst %,$(BUILDDIR)/generated_cpp/com_trolltech_qt_%/main.cpp,$(MODULES))
+QTROOT := /32sw/lib/qt4-mac
+
+##### Build generator and QtScript Bindings #####
+all: build
+
+$(BUILDDIR) $(BUILDDIR)/generator $(BUILDDIR)/qtbindings:
+	mkdir -p $@
+
+## Build generator ##
+$(BUILDDIR)/generator/Makefile: $(CURDIR)/generator/generator.pro | $(BUILDDIR)/generator
+	cd $(BUILDDIR)/generator && $(QTROOT)/bin/qmake $(CURDIR)/generator/generator.pro
+
+$(GENERATOR): $(BUILDDIR)/generator/Makefile
+	$(MAKE) -C $(BUILDDIR)/generator $(QMAKE_TARGET)
+	touch $@
+
+## Generate bindings CPP files ##
+$(GENERATED_CPP_MAIN): $(GENERATOR)
+	cd generator && QTDIR=$(QTROOT) $(CURDIR)/$(GENERATOR) --include-paths=$(QTROOT) --output-directory=$(CURDIR)/$(BUILDDIR)
+	touch $(GENERATED_CPP_MAIN)
+
+## Build qtbindings ##
+$(BUILDDIR)/qtbindings/Makefile: $(GENERATED_CPP_MAIN) $(CURDIR)/qtbindings/qtbindings.pro | $(BUILDDIR)/qtbindings
+	cd $(BUILDDIR)/qtbindings && $(QTROOT)/bin/qmake $(CURDIR)/qtbindings/qtbindings.pro
+
+$(PLUGINS_LIBS): $(BUILDDIR)/qtbindings/Makefile
+$(PLUGINS_LIBS): $(BUILDDIR)/plugins/script/libqtscript_%.so: $(BUILDDIR)/generated_cpp/com_trolltech_qt_%/main.cpp
+	$(MAKE) -C $(BUILDDIR)/qtbindings
+	touch $(PLUGINS_LIBS)
+
+build: $(PLUGINS_LIBS)
+
+clean distclean:
+	if [ -f "$(BUILDDIR)/qtbindings/Makefile" ]; then $(MAKE) -C $(BUILDDIR)/qtbindings $@; fi
+	if [ -f "$(BUILDDIR)/generator/Makefile" ]; then $(MAKE) -C $(BUILDDIR)/generator $@; fi
+	rm -rf $(BUILDDIR)/generated_cpp $(BUILDDIR)/plugins
+	rm -f $(BUILDDIR)/doc/*.html
+	rm -f generator/.preprocessed.tmp generator/mjb_rejected_*.log
+
+.PHONY: clean distclean build
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/ast.h qtscriptgenerator-src-0.1.0-patched/generator/parser/ast.h
--- qtscriptgenerator-src-0.1.0/generator/parser/ast.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/ast.h	2010-01-17 18:35:44.000000000 -0500
@@ -863,7 +863,7 @@
 template <class _Tp>
 _Tp *CreateNode(pool *memory_pool)
 {
-  _Tp *node = reinterpret_cast<_Tp*>(memory_pool->allocate(sizeof(_Tp)));
+  _Tp *node = reinterpret_cast<_Tp*>(memory_pool->allocate(sizeof(_Tp), strideof(_Tp)));
   node->kind = _Tp::__node_kind;
   return node;
 }
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/list.h qtscriptgenerator-src-0.1.0-patched/generator/parser/list.h
--- qtscriptgenerator-src-0.1.0/generator/parser/list.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/list.h	2010-01-17 18:35:44.000000000 -0500
@@ -37,7 +37,7 @@
 
   static ListNode *create(const Tp &element, pool *p)
   {
-    ListNode<Tp> *node = new (p->allocate(sizeof(ListNode))) ListNode();
+    ListNode<Tp> *node = new (p->allocate(sizeof(ListNode), strideof(ListNode))) ListNode();
     node->element = element;
     node->index = 0;
     node->next = node;
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/rpp/pp-engine-bits.h qtscriptgenerator-src-0.1.0-patched/generator/parser/rpp/pp-engine-bits.h
--- qtscriptgenerator-src-0.1.0/generator/parser/rpp/pp-engine-bits.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/rpp/pp-engine-bits.h	2010-01-17 18:35:11.000000000 -0500
@@ -15,6 +15,8 @@
 #ifndef PP_ENGINE_BITS_H
 #define PP_ENGINE_BITS_H
 
+#include <cstdio>
+
 namespace rpp {
 
 inline std::string pp::fix_file_path(std::string const &filename) const
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/rpp/pp-internal.h qtscriptgenerator-src-0.1.0-patched/generator/parser/rpp/pp-internal.h
--- qtscriptgenerator-src-0.1.0/generator/parser/rpp/pp-internal.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/rpp/pp-internal.h	2010-01-17 18:35:21.000000000 -0500
@@ -16,6 +16,7 @@
 #define PP_INTERNAL_H
 
 #include <algorithm>
+#include <cstdio>
 
 namespace rpp {
 
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/rpp/pp-symbol.h qtscriptgenerator-src-0.1.0-patched/generator/parser/rpp/pp-symbol.h
--- qtscriptgenerator-src-0.1.0/generator/parser/rpp/pp-symbol.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/rpp/pp-symbol.h	2010-01-17 18:35:44.000000000 -0500
@@ -24,6 +24,11 @@
     static rxx_allocator<char>__allocator;
     return __allocator;
   }
+  static rxx_allocator<pp_fast_string> &ppfs_allocator_instance ()
+  {
+    static rxx_allocator<pp_fast_string>__ppfs_allocator;
+    return __ppfs_allocator;
+  }
 
 public:
   static int &N()
@@ -39,7 +44,7 @@
     memcpy(data, __data, __size);
     data[__size] = '\0';
 
-    char *where = allocator_instance ().allocate (sizeof (pp_fast_string));
+    pp_fast_string *where = ppfs_allocator_instance ().allocate (sizeof (pp_fast_string));
     return new (where) pp_fast_string (data, __size);
   }
 
@@ -59,7 +64,7 @@
     std::copy (__first, __last, data);
     data[__size] = '\0';
 
-    char *where = allocator_instance ().allocate (sizeof (pp_fast_string));
+    pp_fast_string *where = ppfs_allocator_instance ().allocate (sizeof (pp_fast_string));
     return new (where) pp_fast_string (data, __size);
   }
 
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/rxx_allocator.h qtscriptgenerator-src-0.1.0-patched/generator/parser/rxx_allocator.h
--- qtscriptgenerator-src-0.1.0/generator/parser/rxx_allocator.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/rxx_allocator.h	2010-01-17 18:35:44.000000000 -0500
@@ -31,6 +31,17 @@
 #include <cstring>
 #include <memory>
 
+// Stride calculation
+template <typename T>
+struct Tchar {
+  T t;
+  char c;
+};
+
+#define strideof(T)                            \
+  ((sizeof(Tchar<T>) > sizeof(T)) ?            \
+  sizeof(Tchar<T>)-sizeof(T) : sizeof(T))
+
 template <class _Tp> class rxx_allocator {
 public:
   typedef _Tp value_type;
@@ -89,6 +100,12 @@
     return p;
   }
 
+  pointer allocate(size_type __n, size_type stride, const void* = 0) {
+    if (reinterpret_cast<size_type>(_M_current_block + _M_current_index) % stride > 0)
+      _M_current_index += stride - reinterpret_cast<size_type>(_M_current_block + _M_current_index) % stride;
+    return allocate(__n);
+  }
+
   void deallocate(pointer __p, size_type __n) {}
 
   size_type max_size() const { return size_type(-1) / sizeof(_Tp); }
diff -Nurd qtscriptgenerator-src-0.1.0/generator/parser/smallobject.h qtscriptgenerator-src-0.1.0-patched/generator/parser/smallobject.h
--- qtscriptgenerator-src-0.1.0/generator/parser/smallobject.h	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/parser/smallobject.h	2010-01-17 18:35:44.000000000 -0500
@@ -35,6 +35,7 @@
 
 public:
   inline void *allocate(std::size_t __size);
+  inline void *allocate(std::size_t __size, std::size_t __stride);
 };
 
 inline void *pool::allocate(std::size_t __size)
@@ -42,6 +43,11 @@
   return __alloc.allocate(__size);
 }
 
+inline void *pool::allocate(std::size_t __size, std::size_t __stride)
+{
+  return __alloc.allocate(__size, __stride);
+}
+
 #endif
 
 // kate: space-indent on; indent-width 2; replace-tabs on;
diff -Nurd qtscriptgenerator-src-0.1.0/generator/typesystem_core.xml qtscriptgenerator-src-0.1.0-patched/generator/typesystem_core.xml
--- qtscriptgenerator-src-0.1.0/generator/typesystem_core.xml	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/generator/typesystem_core.xml	2010-01-17 18:34:37.000000000 -0500
@@ -2090,6 +2090,7 @@
   
   <namespace-type name="QtConcurrent" target-type="class">
     <extra-includes>
+        <include file-name="QThreadPool" location="global"/>
         <include file-name="qtconcurrentreducekernel.h" location="global"/>
         <include file-name="qtconcurrentthreadengine.h" location="global"/>
     </extra-includes>
diff -Nurd qtscriptgenerator-src-0.1.0/qtbindings/qtbindings.pro qtscriptgenerator-src-0.1.0-patched/qtbindings/qtbindings.pro
--- qtscriptgenerator-src-0.1.0/qtbindings/qtbindings.pro	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/qtbindings/qtbindings.pro	2010-01-17 18:34:37.000000000 -0500
@@ -1,3 +1,4 @@
+CONFIG += debug_and_release
 TEMPLATE = subdirs
 SUBDIRS = qtscript_core \
 	  qtscript_gui \
diff -Nurd qtscriptgenerator-src-0.1.0/qtbindings/qtbindingsbase.pri qtscriptgenerator-src-0.1.0-patched/qtbindings/qtbindingsbase.pri
--- qtscriptgenerator-src-0.1.0/qtbindings/qtbindingsbase.pri	2009-02-20 06:42:24.000000000 -0500
+++ qtscriptgenerator-src-0.1.0-patched/qtbindings/qtbindingsbase.pri	2010-01-17 18:34:37.000000000 -0500
@@ -3,6 +3,6 @@
 INCLUDEPATH += .
 DESTDIR = $$PWD/../plugins/script
 QT += script
-CONFIG += debug_and_release
+CONFIG += debug_and_release plugin hide_symbols
 GENERATEDCPP = $$PWD/../generated_cpp
 TARGET=$$qtLibraryTarget($$TARGET)
