Package: llvm27-gcc42
Version: 2.7
Revision: 1
Description: GCC frontend for LLVM
License: GPL
Maintainer: Benjamin Reed <llvm-gcc42@fink.raccoonfink.com>

Depends: %N-shlibs (= %v-%r)
BuildDepends: <<
	gmp,
	libmpfr4,
	llvm27 (>= %v-1)
<<
InfoTest: <<
	TestDepends: dejagnu
	TestScript: make check || exit 1
<<

Source: http://llvm.org/releases/%v/llvm-gcc-4.2-%v.source.tgz
Source-MD5: c5033005ceac1988b7cdc908445090f0

UseMaxBuildJobs: true
CompileScript: <<
	#!/bin/sh -ev
	
	export PATH="%p/opt/llvm-2.7/bin:$PATH"
	export TRIPLET=%m-apple-darwin`sw_vers -productVersion | cut -d. -f1`
	mkdir build
	
	# won't let me do objc++  :(
	pushd build
	../configure --prefix=%p/opt/llvm-%v --mandir=%p/opt/llvm-%v/share/man --with-gmp=%p --with-mpfr=%p --with-libiconv-prefix=%p --program-prefix=llvm- --enable-llvm=%p/opt/llvm-%v --enable-languages=c,c++,fortran,objc --with-arch=nocona --with-tune=generic
	make LLVM_VERSION_INFO=%v
	popd
<<

InstallScript: <<
#!/bin/sh -ev
	pushd build
		make -j1 install DESTDIR="%d"
	popd
	pushd %i/opt/llvm-%v/lib/gcc/*-apple-darwin*/*
		rm -rf libstdc++.dylib
		ln -s /usr/lib/libstdc++.dylib libstdc++.dylib
	popd
<<
DocFiles: CHANGES* COPYING* ChangeLog* MAINTAINERS README*
SplitOff: <<
	Package: %N-shlibs
	Description: Shared libraries for llvm27-gcc42
	Depends: llvm27 (>= %v-1)
	Files: <<
		opt/llvm-%v/lib/i386/libgfortran.2*.dylib
		opt/llvm-%v/lib/i386/libgomp.1*.dylib
		opt/llvm-%v/lib/libgcc_s.1*.dylib
		opt/llvm-%v/lib/libgfortran.2*.dylib
		opt/llvm-%v/lib/libgomp.1*.dylib
	<<
	Shlibs: <<
		%p/opt/llvm-%v/lib/i386/libgfortran.2.dylib 3.0.0 %N-shlibs (>= 2.7-1)
		%p/opt/llvm-2.7/lib/i386/libgomp.1.dylib    2.0.0 %N-shlibs (>= 2.7-1)
		%p/opt/llvm-2.7/lib/libgcc_s.1.dylib        1.0.0 %N-shlibs (>= 2.7-1)
		%p/opt/llvm-2.7/lib/libgfortran.2.dylib     3.0.0 %N-shlibs (>= 2.7-1)
		%p/opt/llvm-2.7/lib/libgomp.1.dylib         2.0.0 %N-shlibs (>= 2.7-1)
	<<
<<

Homepage: http://llvm.org/
DescDetail: <<
The LLVM Project is a collection of modular and reusable compiler and
toolchain technologies.  Despite its name, LLVM has little to do with
traditional virtual machines, though it does provide helpful libraries
that can be used to build them.

llvm-gcc 4.2 integrates the LLVM optimizers and code generator with
the GCC 4.2 parser.  This allows LLVM to compile Ada, Fortran, and
other languages supported by the GCC compiler frontends, and provides
high-fidelity drop-in compatibility with their respective versions of
GCC.
<<

